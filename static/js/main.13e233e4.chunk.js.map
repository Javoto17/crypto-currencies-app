{"version":3,"sources":["components/Header/Header.js","components/Nav/Nav.js","pages/Home/Home.js","constants/actionTypes.js","utils/Api.js","actions/cryptoActions.js","pages/Home/HomeContainer.js","pages/Detailt/Detail.js","pages/App.js","reducers/cryptoReducer.js","reducers/rootReducer.js","sagas/cryptoSaga.js","sagas/rootSaga.js","createStore.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Helmet","charSet","rel","type","href","sizes","Nav","className","role","aria-label","aria-expanded","data-target","onClick","aria-hidden","id","NavLink","to","Home","getCurrencies","this","props","currencies","console","log","components_Nav_Nav","placeholder","Component","GET_CURRENCIES","API_KEY","URL","axios","defaults","baseURL","headers","common","getCurrenciesSuccess","payload","getCurrenciesError","getApi","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","url","concat","method","X-CMC_PRO_API_KEY","stop","apply","arguments","connect","state","cryptoReducer","filter","length","undefined","t","Detail","App","BrowserRouter","components_Header_Header","Route","exact","path","component","initialState","combineReducers","action","watchGetCurrencies","response","call","sent","put","t0","_marked","_context2","takeEvery","_marked2","rootSaga","fork","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","logger","run","Boolean","window","location","hostname","match","ReactDOM","render","es","basename","process","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13e233e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Header = () => (\n  <Helmet>\n    <meta charSet=\"utf-8\" />\n    <title>Crypto Currencies</title>\n    <link rel=\"icon\" type=\"image/png\" href=\"../../assets/images/logo.svg\" sizes=\"16x16\" />\n  </Helmet>\n);\n\nexport default Header;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => (\n  <div className=\"hero-head container is-fluid\">\n    <nav className=\"navbar is-transparent\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\">\n          {/* <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\" /> */}\n          <p> Crypto Currency</p>\n        </a>\n\n        <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" onClick=\"document.querySelector('.navbar-menu).classList.toggle('is-active')\">\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n        <NavLink to=\"/\" className=\"navbar-item\">\n          Home\n        </NavLink>\n        {/* <div className=\"navbar-start\">\n        <a className=\"navbar-item\" href=\"https://bulma.io/\">\n          Home\n        </a>\n        <div className=\"navbar-item has-dropdown is-hoverable\">\n          <a className=\"navbar-link\" href=\"https://bulma.io/documentation/overview/start/\">\n            Docs\n          </a>\n          <div className=\"navbar-dropdown is-boxed\">\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/overview/start/\">\n              Overview\n            </a>\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/modifiers/syntax/\">\n              Modifiers\n            </a>\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/columns/basics/\">\n              Columns\n            </a>\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/layout/container/\">\n              Layout\n            </a>\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/form/general/\">\n              Form\n            </a>\n            <hr className=\"navbar-divider\" />\n            <a className=\"navbar-item\" href=\"https://bulma.io/documentation/elements/box/\">\n              Elements\n            </a>\n            <a className=\"navbar-item is-active\" href=\"https://bulma.io/documentation/components/breadcrumb/\">\n              Components\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"navbar-end\">\n      </div> */}\n      </div>\n    </nav>\n  </div>\n);\n\nexport default Nav;","import React, { Component } from 'react';\nimport './Home.scss';\n\nimport Nav from '../../components/Nav/Nav';\n\nclass Home extends Component {\n\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n\n    getCurrencies();\n  }\n\n\n  render() {\n    const { currencies } = this.props;\n\n    console.log(currencies);\n\n    return (\n      <div className=\"container-parent\">\n        <Nav />\n        <div className=\"hero-body\">\n          <div className=\"container is-fluid\">\n            <div className=\"columns\">\n              <div className=\"column is-half\">\n                <div>\n                  <div className=\"column\">\n                    <h6 className=\"subtitle is-uppercas\">\n                      Crypto Currency\n                    </h6>\n                  </div>\n                  <div className=\"column\">\n                    <h2 className=\"title\">\n                      Consulta aqui el valor actual de las criptomonedas\n                    </h2>\n                  </div>\n                  <div className=\"column is-offset-12\"></div>\n                  <div className=\"column\">\n                    <input className=\"input is-rounded custom-input\" type=\"text\" placeholder=\"Buscar aqui\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-half\">\n                <div className=\"card\">\n                  <div>\n                    <h6>\n                      Crypto Currency\n                    </h6>\n                  </div>\n                  <div>\n                    <h2>\n                      Consulta aqui el valor actual de las criptomonedas\n                    </h2>\n                  </div>\n                  <div></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","export const GET_CURRENCIES = 'crypto/GET_CURRENCIES';\nexport const GET_CURRENCIES_SUCCESS = 'crypto/GET_CURRENCIES_SUCCESS';\nexport const GET_CURRENCIES_ERROR = 'crypto/GET_CURRENCIES_ERROR';\n\n","export const API_KEY = '55fddfcc-f008-4fe7-863d-ccf0d92cb2d8';\n\nexport const URL = process.env.NODE_ENV === 'production' ? 'http://pro-api.coinmarketcap.com/' : 'https://cors-anywhere.herokuapp.com/https://pro-api.coinmarketcap.com/';\n","import * as t from '../constants/actionTypes';\nimport axios from 'axios';\n\nimport { URL, API_KEY } from '../utils/Api';\n\naxios.defaults.baseURL = URL;\naxios.defaults.headers.common['X-CMC_PRO_API_KEY'] = API_KEY;\n// axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n\nexport const getCurrencies = (filter = '') => ({\n  type: t.GET_CURRENCIES,\n  payload: {\n    filter,\n  }\n});\n\nexport const getCurrenciesSuccess = payload => ({\n  type: t.GET_CURRENCIES_SUCCESS,\n  payload,\n});\n\nexport const getCurrenciesError = payload => ({\n  type: t.GET_CURRENCIES_ERROR,\n  payload,\n});\n\n\nexport const getApi = async () => {\n  // return axios.get(`${URL}${endpoint}`, {});\n  return axios({\n    url: `${URL}v1/cryptocurrency/listings/latest`,\n    method: 'get',\n    headers: {\n      'X-CMC_PRO_API_KEY': API_KEY,\n    },\n  });\n};\n","import { connect } from 'react-redux';\nimport Home from './Home';\nimport { getCurrencies } from '../../actions/cryptoActions';\n\nexport default connect(\n  state => ({\n    currencies: state.cryptoReducer.currencies,\n  }), {\n    getCurrencies,\n  },\n)(Home);\n","import React, { Component } from 'react';\n\nclass Detail extends Component {\n  render() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Detail;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from '../components/Header/Header';\nimport Home from './Home/HomeContainer';\nimport Detail from './Detailt/Detail';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router className=\"container is-fluid\">\n        <section className=\"hero\">\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/detailt/:id\" component={Detail} />\n        </section>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import * as t from '../constants/actionTypes';\n\nconst initialState = {\n  currencies: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case t.GET_CURRENCIES:\n    return {\n      currencies: [],\n    };\n  case t.GET_CURRENCIES_SUCCESS:\n    return {\n      currencies: action.payload,\n    };\n  default:\n    return state;\n  }\n};","import { combineReducers } from 'redux';\nimport cryptoReducer from './cryptoReducer';\n\nexport default combineReducers({\n  cryptoReducer\n});","import {\n  put,\n  call,\n  takeEvery,\n} from 'redux-saga/effects';\nimport {\n  getCurrenciesSuccess,\n  getCurrenciesError,\n  getApi\n} from '../actions/cryptoActions';\nimport * as t from '../constants/actionTypes';\n\n\nexport function* getCurrencies() {\n  try {\n    const response = yield call(getApi, 'v1/cryptocurrency/listings/latest');\n    yield put(getCurrenciesSuccess(response));\n  } catch (error) {\n    yield put(getCurrenciesError(error));\n  }\n}\n\nexport function* watchGetCurrencies() {\n  yield takeEvery(t.GET_CURRENCIES, getCurrencies);\n}","import { fork } from 'redux-saga/effects';\n\nimport {\n  watchGetCurrencies,\n} from './cryptoSaga';\n\nexport default function* rootSaga() {\n  yield fork(watchGetCurrencies);\n}\n","import createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport rootSaga from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware, logger),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './pages/App';\n\nimport store from './createStore';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}